{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "../src/App.svelte",
    "../src/Ring.svelte"
  ],
  "sourcesContent": [
    "<script>\n    import Ring from './Ring.svelte'\n    import Calculate from './calculate.js'\n\n    // define props\n    export let color = ''\n    export let content = ''\n\n    let rating = ''\n    $: score = Calculate(content)\n    $: {\n        if (score < 30) {\n            rating = 'Very Difficult'\n        } else if (score >= 30 && score < 50) {\n            rating = 'Difficult'\n        } else if (score >= 50 && score < 60) {\n            rating = 'Fairly Difficult'\n        } else if (score >= 60 && score < 70) {\n            rating = 'Plain English'\n        } else if (score >= 70 && score < 80) {\n            rating = 'Fairly Easy'\n        } else if (score >= 80 && score < 90) {\n            rating = 'Easy'\n        } else if (score >= 90) {\n            rating = 'Very Easy'\n        }\n    }\n</script>\n\n<style>\n.flesch-gauge__inner-wrap {\n    display: inline-block;\n    position: relative;\n}\n.flesch-gauge__copy {\n    position: absolute;\n    left: 50%;\n    top: 50%;\n    transform: translate(-50%, -50%);\n    font-family: sans-serif;\n    font-weight: bold;\n}\n.flesch-gauge__copy p {\n    margin: 0;\n    margin-bottom: 5px;\n    text-align: center;\n}\n\n.flesch-gauge__score {\n    font-size: 1.4em;\n}\n.flesch-gauge__rating {\n    white-space: nowrap;;\n    font-size: 0.7em;\n}\n</style>\n\n<div class=\"flesch-gauge__inner-wrap\">\n    <Ring\n        color={color}\n        percent={score}\n    />\n    <div class=\"flesch-gauge__copy\">\n        <p class=\"flesch-gauge__score\">{score}</p>\n        <p class=\"flesch-gauge__rating\">{rating}</p>\n    </div>\n</div>",
    "<script>\n  export let color = 'black'\n  export let radius = 52\n  export let percent = 100\n\n  let circumference = radius * 2 * Math.PI\n\n  let strokeDasharray = `${circumference} ${circumference}`\n  let strokeDashoffset = circumference\n\n  $: {\n    // timeout to enable transition\n    setTimeout(() => {\n      strokeDashoffset = circumference - percent / 100 * circumference\n    }, 0)\n  }\n</script>\n\n<style>\n.progress-ring__circle {\n  transition: stroke-dashoffset 800ms ease-in-out;\n  transform: rotate(90deg);\n  transform-origin: center;\n}\n</style>\n\n<svg\n   class=\"progress-ring\"\n   width=\"120\"\n   height=\"120\">\n  <circle\n    class=\"progress-ring__circle\"\n    stroke={color}\n    stroke-width=\"10\"\n    stroke-linecap=\"round\"\n    stroke-dasharray={strokeDasharray}\n    stroke-dashoffset={strokeDashoffset}\n    fill=\"transparent\"\n    r={radius}\n    cx=\"60\"\n    cy=\"60\"/>\n</svg>"
  ],
  "names": [],
  "mappings": "AA8BA,yBAAyB,cAAC,CAAC,AACvB,OAAO,CAAE,YAAY,CACrB,QAAQ,CAAE,QAAQ,AACtB,CAAC,AACD,mBAAmB,cAAC,CAAC,AACjB,QAAQ,CAAE,QAAQ,CAClB,IAAI,CAAE,GAAG,CACT,GAAG,CAAE,GAAG,CACR,SAAS,CAAE,UAAU,IAAI,CAAC,CAAC,IAAI,CAAC,CAChC,WAAW,CAAE,UAAU,CACvB,WAAW,CAAE,IAAI,AACrB,CAAC,AACD,iCAAmB,CAAC,CAAC,cAAC,CAAC,AACnB,MAAM,CAAE,CAAC,CACT,aAAa,CAAE,GAAG,CAClB,UAAU,CAAE,MAAM,AACtB,CAAC,AAED,oBAAoB,cAAC,CAAC,AAClB,SAAS,CAAE,KAAK,AACpB,CAAC,AACD,qBAAqB,cAAC,CAAC,AACnB,WAAW,CAAE,MAAM,CACnB,SAAS,CAAE,KAAK,AACpB,CAAC;ACnCD,sBAAsB,eAAC,CAAC,AACtB,UAAU,CAAE,iBAAiB,CAAC,KAAK,CAAC,WAAW,CAC/C,SAAS,CAAE,OAAO,KAAK,CAAC,CACxB,gBAAgB,CAAE,MAAM,AAC1B,CAAC"
}